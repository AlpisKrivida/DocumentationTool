@page "/monitor/create"
@inject NavigationManager navigationManager
@inject IMonitorRepository monitorRepository

<MonitorForm Monitor="Monitor" 
             Model="Model" 
             General="General"
             FormFactor="FormFactor"
             PowerConsumer="PowerConsumer"
             OnValidSubmit="SaveMonitor" />

@code {
    private Monitor Monitor = new Monitor();
    private Model Model = new Model();
    private General General = new General();
    private FormFactor FormFactor = new FormFactor();
    private PowerConsumer PowerConsumer = new PowerConsumer();

    protected async override Task OnInitializedAsync()
    {
        General.DateOfChange = DateTime.Now;
        General.CreatioDate = DateTime.Now;
    }

    private async Task SaveMonitor()
    {
        try
        {
            General.DateOfChange = DateTime.Now;
            General.CreatioDate = DateTime.Now;

            Monitor.General = General;
            Monitor.Model = Model;
            Monitor.FormFactor = FormFactor;
            Monitor.PowerConsumer = PowerConsumer;

            var monitorId = await monitorRepository.CreateMonitor(Monitor);
            navigationManager.NavigateTo("monitor");
        }
        catch(Exception ex)
        {
            Console.WriteLine(ex);
        }
    }
}
