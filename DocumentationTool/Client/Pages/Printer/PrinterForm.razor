<EditForm Model="Printer" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />

    <form>
        <div class="form-group">
            <label>Type</label>
            <div>
                <InputText class="form-control" @bind-Value="@Printer.Type" />
                <ValidationMessage For="@(() => Printer.Type)" />
            </div>
        </div>

        <div class="form-group">
            <label>Color</label>
            <div>
                <InputText class="form-control" @bind-Value="@Printer.Color" />
                <ValidationMessage For="@(() => Printer.Color)" />
            </div>
        </div>

        <div class="form-group">
            <label>Duplex</label>
            <div>
                <InputText @bind-Value="@Printer.Duplex" />
                <ValidationMessage For="@(() => Printer.Duplex)" />
            </div>
        </div>

        <div class="form-group">
            <label>Emulation</label>
            <div>
                <InputText @bind-Value="@Printer.Emulation" />
                <ValidationMessage For="@(() => Printer.PaperFormat)" />
            </div>
        </div>

        <div class="form-group">
            <label>Paper format</label>
            <div>
                <InputText @bind-Value="@Printer.PaperFormat" />
                <ValidationMessage For="@(() => Printer.PaperFormat)" />
            </div>
        </div>

        <div class="form-group">
            <label>Description</label>
            <div>
                <InputTextArea class="form-control" @bind-Value="@Printer.Description" />
                <ValidationMessage For="@(() => Printer.Description)" />
            </div>
        </div>
    </form>

    <ModelForm Model="Model" />

    <button class="btn btn-primary" type="submit">Save Changes</button>
</EditForm>

@code {
    [Parameter] public Printer Printer { get; set; }
    [Parameter] public Model Model { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
}