@using DocumentationTool.Client.Shared.Tabs
@using DocumentationTool.Client.Shared.GeneralSH
@using DocumentationTool.Client.Shared.FormFactorSH
@using DocumentationTool.Client.Shared.PowerConsumerSH
@using DocumentationTool.Client.Shared.ModelSH
@using DocumentationTool.Client.Shared.CPUSH
@using DocumentationTool.Client.Shared.MemorySH
@using DocumentationTool.Client.Shared.DevicePortSH
@using DocumentationTool.Client.Shared.HostAddressSH
@using DocumentationTool.Client.Pages.Contacts


@page "/server/detail/{ServerId:int}"
@inject IServerRepository serverRepository
@inject NavigationManager navigationManager

<h3>Server details</h3>

@if (Server != null)
{
<TabControl>
    <TabPage Text="General">
        <GeneralDetails General="Server.General" />
    </TabPage>
    <TabPage Text="Form factor">
        <FormFactorDetail FormFactor="Server.FormFactor" />
    </TabPage>
    <TabPage Text="Power consumer">
        <PowerConsumerDetail PowerConsumer="Server.PowerConsumer" />
    </TabPage>
    <TabPage Text="Model">
        <ModelDetail Model="Server.Model" />
    </TabPage>
    <TabPage Text="CPU">
        <CPUDetail CPU="Server.CPU" />
    </TabPage>
    <TabPage Text="Memory">
        <MemoryDetail Memory="Server.Memory" />
    </TabPage>
    <TabPage Text="Port">
        <DeviceIndex Device="server"
                     DeviceId="ServerId" />
    </TabPage>
    <TabPage Text="Host address">
        <HostAddressIndex DeviceHostAddress="Server.HostAddress"
                          Device="server"
                          DeviceId="Server.Id"/>
    </TabPage>
    <TabPage Text="Application">
    </TabPage>
    <TabPage Text="Contacts">
        <ContactForDevices ServerDevice="Server" />
    </TabPage>

</TabControl>

}

@code {
    [Parameter]
    public int ServerId { get; set; }

    public ServerDevice Server;

    public string ServerName = "server";

    protected async override Task OnInitializedAsync()
    {
        Server = await serverRepository.GetServerDevice(ServerId);
    }
}
