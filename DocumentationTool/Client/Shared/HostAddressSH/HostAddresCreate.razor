@page "/port/create/{Device}/{DeviceId:int}"

@inject NavigationManager navigationManager
@inject IServerRepository serverRepository
@inject IRouterRepository routerRepository
@inject ISwitchRepository switchRepository
@inject IClientRepository clientRepository  


<HostAddressForm HostAddress="HostAddress" />

@code {
    [Parameter] public string Device { get; set; }
    [Parameter] public int DeviceId { get; set; }

    public HostAddress HostAddress = new HostAddress();
    private ServerDevice ServerDevice;

    private async Task SaveData()
    {
        try
        {
            switch (Device)
            {
                case "server":
                    ServerDevice = await serverRepository.GetServerDevice(DeviceId);
                    ServerDevice.HostAddress = HostAddress;
                    await serverRepository.UpdateServerDevice(ServerDevice);
                    break;

                case "switch":

                    break;

                case "router":

                    break;

                case "printer":
                    break;

                default:
                    throw new ArgumentException(message: "invalid device value", paramName: nameof(Device));
            };

            var url = $"{Device}/detail/{DeviceId}";
            navigationManager.NavigateTo(url);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }
}
